<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="exec_engine_comparison" targetName="gtest" />
      <config projectName="exec_engine_comparison" targetName="run_hybrid" />
      <config projectName="exec_engine_comparison" targetName="vectorwise" />
      <config projectName="exec_engine_comparison" targetName="run_prim" />
      <config projectName="exec_engine_comparison" targetName="hyper" />
      <config projectName="exec_engine_comparison" targetName="ssb" />
      <config projectName="exec_engine_comparison" targetName="benchmark_config" />
      <config projectName="exec_engine_comparison" targetName="bench" />
      <config projectName="exec_engine_comparison" targetName="gmock_main" />
      <config projectName="exec_engine_comparison" targetName="listevents" />
      <config projectName="exec_engine_comparison" targetName="tpch" />
      <config projectName="exec_engine_comparison" targetName="common" />
      <config projectName="exec_engine_comparison" targetName="hybrid" />
      <config projectName="exec_engine_comparison" targetName="gtest_main" />
      <config projectName="exec_engine_comparison" targetName="jevents" />
      <config projectName="exec_engine_comparison" targetName="test_all" />
      <config projectName="exec_engine_comparison" targetName="gmock" />
      <config projectName="exec_engine_comparison" targetName="run_tpch" />
      <config projectName="exec_engine_comparison" targetName="run_ssb" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e43a0728-3076-4296-b503-9f53d9674c85" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/CMakeDirectoryInformation.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/CMakeDirectoryInformation.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/cmake_clean_target.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/cmake_clean_target.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/jevents.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/listevents.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/listevents.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/listevents.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/listevents.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/listevents.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/listevents.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/listevents.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/listevents.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/jevents.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/jevents.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/3rdparty/jevents/listevents" beforeDir="false" afterPath="$PROJECT_DIR$/3rdparty/jevents/listevents" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CTestTestfile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/CTestTestfile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bench" beforeDir="false" afterPath="$PROJECT_DIR$/bench" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exec_engine_comparison.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/exec_engine_comparison.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/CMakeFiles/CMakeDirectoryInformation.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/CMakeFiles/CMakeDirectoryInformation.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/CTestTestfile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/CTestTestfile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/cmake_clean_target.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/cmake_clean_target.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/cmake_clean_target.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/cmake_clean_target.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CMakeFiles/gmock_main.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/CTestTestfile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/CTestTestfile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gmock.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gmock.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/cmake_clean_target.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/cmake_clean_target.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/cmake_clean_target.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/cmake_clean_target.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CTestTestfile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/CTestTestfile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googlemock/gtest/gtest.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googlemock/gtest/gtest.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-build/googletest-distribution.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-build/googletest-distribution.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-download/CMakeFiles/CMakeOutput.log" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-download/CMakeFiles/CMakeOutput.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/googletest-download/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/googletest-download/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/hybrid/hybrid_execution.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/include/hybrid/hybrid_execution.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/run_prim" beforeDir="false" afterPath="$PROJECT_DIR$/run_prim" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/run_ssb" beforeDir="false" afterPath="$PROJECT_DIR$/run_ssb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/run_tpch" beforeDir="false" afterPath="$PROJECT_DIR$/run_tpch" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/hybrid/hybrid_execution.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/hybrid/hybrid_execution.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/hybrid/run.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/hybrid/run.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test_all" beforeDir="false" afterPath="$PROJECT_DIR$/test_all" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/cmake-build-debug/" />
    <ignored path="$PROJECT_DIR$/CMakeFiles/" />
    <ignored path="$PROJECT_DIR$/3rdparty/jevents/CMakeFiles/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="DockManager">
    <window id="1">
      <content type="file-editors">
        <state>
          <leaf>
            <file pinned="false" current-in-tab="true">
              <entry file="file://$PROJECT_DIR$/src/hybrid/run.cpp">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="18">
                    <caret line="171" selection-start-line="171" selection-end-line="171" />
                    <folding>
                      <element signature="e#0#20#0" expanded="true" />
                    </folding>
                  </state>
                </provider>
              </entry>
            </file>
            <file pinned="false" current-in-tab="false">
              <entry file="file://$PROJECT_DIR$/src/benchmarks/tpch/queries/q6.cpp">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="576">
                    <caret line="73" column="38" lean-forward="true" selection-start-line="73" selection-start-column="38" selection-end-line="73" selection-end-column="38" />
                  </state>
                </provider>
              </entry>
            </file>
            <file pinned="false" current-in-tab="false">
              <entry file="file://$PROJECT_DIR$/src/benchmarks/tpch/queries/q3.cpp">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="-4947">
                    <caret line="72" selection-start-line="72" selection-end-line="94" selection-end-column="1" />
                  </state>
                </provider>
              </entry>
            </file>
          </leaf>
        </state>
      </content>
    </window>
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileEditorManager">
    <leaf>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/hybrid/hybrid_execution.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="316">
              <caret line="240" column="39" lean-forward="true" selection-start-line="240" selection-start-column="39" selection-end-line="240" selection-end-column="39" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/include/hybrid/hybrid_execution.hpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="388">
              <caret line="24" selection-start-line="24" selection-end-line="28" selection-end-column="71" />
              <folding>
                <element signature="e#14#31#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>vwOperator</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/benchmarks/tpch/queries/q3.cpp" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/include/hybrid/hybrid_execution.hpp" />
        <option value="$PROJECT_DIR$/src/hybrid/hybrid_execution.cpp" />
        <option value="$PROJECT_DIR$/src/hybrid/run.cpp" />
      </list>
    </option>
  </component>
  <component name="OCFindUsagesOptions" text="true" ivars="false" properties="true" derivedClasses="false" />
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="864" />
    <option name="y" value="-4" />
    <option name="width" value="816" />
    <option name="height" value="1054" />
  </component>
  <component name="ProjectId" id="1ZqB09YqRcPiWglqANXCcgwVDLG" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="exec_engine_comparison" type="b2602c69:ProjectViewProjectNode" />
              <item name="db-engine-paradigms" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="exec_engine_comparison" type="b2602c69:ProjectViewProjectNode" />
              <item name="db-engine-paradigms" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="exec_engine_comparison" type="b2602c69:ProjectViewProjectNode" />
              <item name="db-engine-paradigms" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="hybrid" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.advertisement.text.has.clang-format" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="npm" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/include/hybrid" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/hybrid" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.run_hybrid">
    <configuration name="bench" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="bench" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="exec_engine_comparison" RUN_TARGET_NAME="bench">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="benchmark_config" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="benchmark_config" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="common" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="common" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="gmock" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="gmock_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="gtest_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="hybrid" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="hybrid" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="hyper" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="hyper" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="jevents" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="jevents" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="listevents" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="listevents" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="exec_engine_comparison" RUN_TARGET_NAME="listevents">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="run_hybrid" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="1 $USER_HOME$/HeroDB/Heterogenenous_platform_support/beta/Dispatcher/data/tpch/sf1/ 1 1" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="run_hybrid" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="exec_engine_comparison" RUN_TARGET_NAME="run_hybrid">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="run_prim" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="run_prim" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="exec_engine_comparison" RUN_TARGET_NAME="run_prim">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="run_ssb" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="run_ssb" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="exec_engine_comparison" RUN_TARGET_NAME="run_ssb">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="run_tpch" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="1 $USER_HOME$/HeroDB/beta/Dispatcher/data/tpch/sf1/ 1 1" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="run_tpch" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="exec_engine_comparison" RUN_TARGET_NAME="run_tpch">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ssb" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="ssb" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test_all" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="test_all" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="exec_engine_comparison" RUN_TARGET_NAME="test_all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tpch" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="tpch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="vectorwise" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="exec_engine_comparison" TARGET_NAME="vectorwise" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.bench" />
      <item itemvalue="Application.benchmark_config" />
      <item itemvalue="Application.common" />
      <item itemvalue="Application.gmock" />
      <item itemvalue="Application.gmock_main" />
      <item itemvalue="Application.gtest" />
      <item itemvalue="Application.gtest_main" />
      <item itemvalue="Application.hybrid" />
      <item itemvalue="Application.hyper" />
      <item itemvalue="Application.jevents" />
      <item itemvalue="Application.listevents" />
      <item itemvalue="Application.run_hybrid" />
      <item itemvalue="Application.run_prim" />
      <item itemvalue="Application.run_ssb" />
      <item itemvalue="Application.run_tpch" />
      <item itemvalue="Application.ssb" />
      <item itemvalue="Application.test_all" />
      <item itemvalue="Application.tpch" />
      <item itemvalue="Application.vectorwise" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e43a0728-3076-4296-b503-9f53d9674c85" name="Default Changelist" comment="" />
      <created>1566479033776</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1566479033776</updated>
      <workItem from="1566479035045" duration="90000" />
      <workItem from="1566479148411" duration="6965000" />
      <workItem from="1566553781263" duration="18000" />
      <workItem from="1567080055819" duration="1983000" />
      <workItem from="1568114414412" duration="79282000" />
      <workItem from="1568641650256" duration="55000" />
      <workItem from="1569488421941" duration="11889000" />
      <workItem from="1570050956993" duration="1424000" />
      <workItem from="1570109840459" duration="1383000" />
      <workItem from="1570173496665" duration="611000" />
      <workItem from="1570531651992" duration="916000" />
      <workItem from="1571253266082" duration="21000" />
      <workItem from="1571253317198" duration="12000" />
      <workItem from="1573134236299" duration="1241000" />
      <workItem from="1573202320499" duration="1074000" />
      <workItem from="1582098219176" duration="5903000" />
      <workItem from="1582188485832" duration="375000" />
      <workItem from="1583916270216" duration="40258000" />
      <workItem from="1584034868079" duration="384000" />
      <workItem from="1584035312200" duration="173000" />
      <workItem from="1584088657307" duration="30201000" />
      <workItem from="1584119883163" duration="28585000" />
      <workItem from="1584379428275" duration="2054000" />
      <workItem from="1584436022714" duration="18472000" />
      <workItem from="1584613418264" duration="4306000" />
      <workItem from="1584953966419" duration="6000" />
      <workItem from="1584965989610" duration="12757000" />
      <workItem from="1585658242299" duration="14513000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="268467000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="49" y="-4" width="1631" height="1054" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Favorites" side_tool="true" />
      <window_info content_ui="combo" id="Project" order="0" weight="0.24984227" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="Database Changes" />
      <window_info anchor="bottom" id="Version Control" />
      <window_info anchor="bottom" id="Messages" />
      <window_info active="true" anchor="bottom" x="1680" y="24" width="1680" height="1026" id="Terminal" maximized="true" type="WINDOWED" visible="true" weight="0.32912722" />
      <window_info anchor="bottom" id="Event Log" side_tool="true" />
      <window_info anchor="bottom" id="CMake" weight="0.32912722" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.32912722" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="right" id="Database" weight="0.32996845" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.ll" />
  </component>
  <component name="WindowStateProjectService">
    <state width="912" height="280" key="GridCell.Tab.0.bottom" timestamp="1585562297504">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state width="912" height="280" key="GridCell.Tab.0.bottom/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585562297504" />
    <state width="912" height="280" key="GridCell.Tab.0.center" timestamp="1585562297503">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state width="912" height="280" key="GridCell.Tab.0.center/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585562297503" />
    <state width="912" height="280" key="GridCell.Tab.0.left" timestamp="1585562297503">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state width="912" height="280" key="GridCell.Tab.0.left/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585562297503" />
    <state width="912" height="280" key="GridCell.Tab.0.right" timestamp="1585562297503">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state width="912" height="280" key="GridCell.Tab.0.right/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585562297503" />
    <state width="912" height="280" key="GridCell.Tab.1.bottom" timestamp="1585562297504">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state width="912" height="280" key="GridCell.Tab.1.bottom/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585562297504" />
    <state width="912" height="280" key="GridCell.Tab.1.center" timestamp="1585562297504">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state width="912" height="280" key="GridCell.Tab.1.center/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585562297504" />
    <state width="912" height="280" key="GridCell.Tab.1.left" timestamp="1585562297504">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state width="912" height="280" key="GridCell.Tab.1.left/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585562297504" />
    <state width="912" height="280" key="GridCell.Tab.1.right" timestamp="1585562297504">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state width="912" height="280" key="GridCell.Tab.1.right/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585562297504" />
    <state x="727" y="83" width="914" height="703" key="dock-window-1" timestamp="1585557711998">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state x="727" y="83" width="914" height="703" key="dock-window-1/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585557711998" />
    <state x="960" y="27" width="960" height="1053" key="dock-window-2" timestamp="1585575129106">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state x="960" y="27" width="960" height="1053" key="dock-window-2/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585575129106" />
    <state x="1103" y="255" width="672" height="677" key="run.anything.popup" timestamp="1585558826437">
      <screen x="0" y="27" width="1920" height="1053" />
    </state>
    <state x="1103" y="255" width="672" height="677" key="run.anything.popup/0.27.1920.1053/1920.0.1920.1080@0.27.1920.1053" timestamp="1585558826437" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/include/hybrid/hybrid_datatypes.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="203">
          <caret line="61" column="42" selection-start-line="61" selection-start-column="42" selection-end-line="61" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/6/bits/unique_ptr.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="185">
          <caret line="114" column="62" lean-forward="true" selection-start-line="114" selection-start-column="2" selection-end-line="114" selection-end-column="62" />
          <folding>
            <element signature="e#3713#3764#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/include/hybrid/hybrid_execution.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="388">
          <caret line="24" selection-start-line="24" selection-end-line="28" selection-end-column="71" />
          <folding>
            <element signature="e#14#31#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/benchmarks/tpch/queries/q6.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="576">
          <caret line="73" column="38" lean-forward="true" selection-start-line="73" selection-start-column="38" selection-end-line="73" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/include/vectorwise/Operators.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="307">
          <caret line="53" column="6" selection-start-line="53" selection-start-column="6" selection-end-line="53" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/benchmarks/tpch/queries/q3.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-4947">
          <caret line="72" selection-start-line="72" selection-end-line="94" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/hybrid/run.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="18">
          <caret line="171" selection-start-line="171" selection-end-line="171" />
          <folding>
            <element signature="e#0#20#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/hybrid/hybrid_execution.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="316">
          <caret line="240" column="39" lean-forward="true" selection-start-line="240" selection-start-column="39" selection-end-line="240" selection-end-column="39" />
        </state>
      </provider>
    </entry>
  </component>
</project>